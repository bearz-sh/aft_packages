services:
  postgres:
    image: {{ image.name }}:{{ image.tag }}
    container_name: {{ service }}
    hostname: {{ hostname }}
    restart: {{ restart }}
    environment:
      TZ: {{ tz }}
      PUID: {{ puid }}
      PGID: {{ pgid }}
      POSTGRES_USER: {{ postgres.user }}
      POSTGRES_DB: {{ postgres.db }}
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-CHANGEm3!}"
{{#if environment}}
{{#each environment}}
      {{@key}}: "{{this}}"
{{/each}}
{{/if}}
    ports:
      - "{{ ports.default }}:5432"
    volumes:
      - "{{ volumes.data }}:/var/lib/postgresql/data"
    healthcheck:
      test:
        [
          "CMD",
          "/usr/bin/pg_isready",
          "-d",
          "$${POSTGRES_DB}",
          "-U", 
          "$${POSTGRES_USER}"
        ]
      timeout: {{ healthcheck.timeout }}
      interval: {{ healthcheck.interval }}
      retries: {{ healthcheck.retries }}
      start_period: {{ healthcheck.startPeriod }}
    labels:
      - "aft.service={{ service }}"
{{#if watchtower}}
      - "com.centurylinklabs.watchtower.enable=true"
{{/if}}
{{#if traefik}}
      - "traefik.enable=true"
      - "traefik.tcp.routers.{{ service }}.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.{{ service }}.entryPoints=postgres"
      - "traefik.tcp.services.{{ service }}.loadbalancer.server.port={{ ports.default }}"
{{/if}}
{{#if labels}}
{{#each labels}}
      - "{{this}}"
{{/each}}
{{/if}}
    networks:
{{#each networks}}
    {{#if this.assignIp }}
      {{ this.name }}:
        ipv4_address: {{ this.cidr.[0] }}.{{ this.cidr.[1] }}.{{ this.suffix }}
    {{else}}
      - {{ this.name }}:
    {{/if}}
{{/each}}

networks:
{{#each networks}}
  {{this.name}}:
    external: true
    name: {{ this.name }}  
{{/each}}